@model RiotTournamentApi.Models.SummonerRankDTO

@{
    ViewData["Title"] = "SummonerSearchView";
}

<h2>SummonerSearchView</h2>

<div class="navbar-left" style="margin-top:8px;">
        <form action="/SummonerSearch/Search/@Model.SearchString" Method="GET">
            <input asp-for="SearchString" class="form-control" />
            <input type="hidden" name="Property" value="hello,world" />
            <button type="submit">Go To User</button>
        </form>
</div>

@if (!string.IsNullOrEmpty(Model.SearchString))
{
    <div>
        <h4>SummonerDTO</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Id)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Id)
            </dd>
        </dl>
    </div>

    <div>
        @foreach (var leagueEntry in Model.LeagueEntries)
        {
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => leagueEntry.QueueType)
                </dt>
                <dd>
                    @Html.DisplayFor(model => leagueEntry.QueueType)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => leagueEntry.SummonerName)
                </dt>
                <dd>
                    @Html.DisplayFor(model => leagueEntry.SummonerName)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => leagueEntry.HotStreak)
                </dt>
                <dd>
                    @Html.DisplayFor(model => leagueEntry.HotStreak)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => leagueEntry.Wins)
                </dt>
                <dd>
                    @Html.DisplayFor(model => leagueEntry.Wins)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => leagueEntry.Losses)
                </dt>
                <dd>
                    @Html.DisplayFor(model => leagueEntry.Losses)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => leagueEntry.Tier)
                </dt>
                <dd>
                    @Html.DisplayFor(model => leagueEntry.Tier)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => leagueEntry.LeagueId)
                </dt>
                <dd>
                    @Html.DisplayFor(model => leagueEntry.LeagueId)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => leagueEntry.Inactive)
                </dt>
                <dd>
                    @Html.DisplayFor(model => leagueEntry.Inactive)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => leagueEntry.FreshBlood)
                </dt>
                <dd>
                    @Html.DisplayFor(model => leagueEntry.FreshBlood)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => leagueEntry.Rank)
                </dt>
                <dd>
                    @Html.DisplayFor(model => leagueEntry.Rank)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => leagueEntry.SummonerId)
                </dt>
                <dd>
                    @Html.DisplayFor(model => leagueEntry.SummonerId)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => leagueEntry.LeaguePoints)
                </dt>
                <dd>
                    @Html.DisplayFor(model => leagueEntry.LeaguePoints)
                </dd>
            </dl>
        }
    </div>
}
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>
